Phase1:
Border relations with Canada have never been better.
Phase2: notice that 0x18 = 24 in decimal
1 2 4 8 16 32
phase3: other qualified answers can be examined 
7 327
phase4:
7 0

phsase5:
yonuvw
(
here answer is not unique; 
hint: note that we need find six characters and use its lowest 4bits as a bias in source array
0x4024b0:maduiersnfotvbyl
to form a string which is the same as what 0x40245e stored. Only the lowest bit match is OK in this section.
)


phase6:
from - to 0x401153: a. 6个数组必须在1-6之间(通过sub1, 以及无符号数比较保证大于等于0) b. 两重循环可得知， 6个数字各不相同
from 0x401158 to 0x40116f: a[i] = 7 - a[i]











note that the return value of func7 Needs tobe 2 to meet the match
func7 looks like 
func7(node*ptr, int val) {
	int rt;
	if (ptr->val > ca) {
		rt = func7(ptr->left, ca);
		return 2*rt;
	} else {
		if (ptr->val == ca)
			return 0;
		rt = func7(ptr->right, ca);
		return 2*rt + 1;
	}
}

a possible way is :
recursive 0: return 2 by 2*1
recursive 1: return 1 by 2*0 + 1
recursive 2: return 0 

tree looks like:

/*
					36
				 / \
				8
			 / \
			6   22
*/
So 22 is the possible val


